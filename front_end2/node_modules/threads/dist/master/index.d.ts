import type { BlobWorker as BlobWorkerClass } from "threads/dist/types/master";
import { Worker as WorkerType } from "threads/dist/types/master";
import { isWorkerRuntime } from "threads/dist/master/implementation";
export { FunctionThread, ModuleThread } from "threads/dist/types/master";
export { Pool } from "threads/dist/master/pool";
export { spawn } from "threads/dist/master/spawn";
export { Thread } from "threads/dist/master/thread";
export { isWorkerRuntime };
export declare type BlobWorker = typeof BlobWorkerClass;
export declare type Worker = WorkerType;
/** Separate class to spawn workers from source code blobs or strings. */
export declare const BlobWorker: typeof BlobWorkerClass;
/** Worker implementation. Either web worker or a node.js Worker class. */
export declare const Worker: typeof import("threads/dist/types/master").WorkerImplementation;
