/// <reference types="node" />
import { Buffer } from 'buffer';
import VirtualOffset from '@gmod/tabix/dist/virtualOffset';
import Chunk from '@gmod/tabix/dist/chunk';
import IndexFile, { Options } from '@gmod/tabix/dist/indexFile';
export default class TabixIndex extends IndexFile {
    lineCount(refName: string, opts?: Options): Promise<any>;
    _parse(opts?: Options): Promise<{
        indices: {
            binIndex: {
                [key: number]: Chunk[];
            };
            linearIndex: any[];
            stats: {
                lineCount: number;
            } | undefined;
        }[];
        metaChar: string | null;
        maxBinNumber: number;
        maxRefLength: number;
        skipLines: number;
        firstDataLine: VirtualOffset | undefined;
        columnNumbers: {
            ref: number;
            start: number;
            end: number;
        };
        coordinateType: string;
        format: string;
        refIdToName: string[];
        refNameToId: {
            [key: string]: number;
        };
        maxBlockSize: number;
    }>;
    parsePseudoBin(bytes: Buffer, offset: number): {
        lineCount: number;
    };
    _parseNameBytes(namesBytes: Buffer): {
        refNameToId: {
            [key: string]: number;
        };
        refIdToName: string[];
    };
    blocksForRange(refName: string, min: number, max: number, opts?: Options): Promise<Chunk[]>;
}
