"""
Django settings for ActiveLoops_api project.

Generated by 'django-admin startproject' using Django 4.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""
import os
import sys
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
# 把apps，加入到项目根的搜索路径，导入的时候，可以直接从源码包中导入
sys.path.insert(0, BASE_DIR)
sys.path.insert(0, os.path.join(BASE_DIR, "apps"))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-^ud(so@tzl9o*@ue7$$z+*-1zw44$h&fa#q0u#7)ou#9d06wsp'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'results',
    'drf_yasg',  # Swagger 支持
    'corsheaders',
    'rest_framework',
    # 'django_elasticsearch_dsl',
    # 'chromatinLoops',
    'annotations',
    # 'downloads',
    # 'analysis',
    'GenomeHub'

]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'myproject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'myproject.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    # 'default': {
    #     # 'ENGINE': 'django.db.backends.sqlite3',
    #     # 'NAME': BASE_DIR / 'db.sqlite3',
    #     'ENGINE': 'django.db.backends.mysql',
    #     'NAME': '3dannotate',
    #     'USER': 'dbuser',
    #     'PASSWORD': 'As87s_@65jdsa',
    #     'HOST': '47.107.91.5',
    #     'PORT':'3307', # 端口
    # }
    'default': {
        # 'ENGINE': 'django.db.backends.sqlite3',
        # 'NAME': BASE_DIR / 'db.sqlite3',
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': '3dannotate',
        'USER': 'postgres',
        'PASSWORD': 'wsljr1222999',
        'HOST': 'localhost',
        'PORT':'5432', # 端口
    }
}



# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# 设置STATIC ROOT 和 STATIC URL
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATIC_URL = "static/"

# 设置MEDIA ROOT 和 MEDIA URL
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = "media/"


DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# ELASTICSEARCH_DSL = {
#     "default": {
#         "hosts": "http://47.107.91.5:9200/",
#     },
# }
# ELASTICSEARCH_DSL_AUTO_REFRESH = False
# ELASTICSEARCH_DSL_PARALLEL = True



ALLOWED_HOSTS = ['*']
CORS_ALLOW_ALL_ORIGINS = True
SECURE_CROSS_ORIGIN_OPENER_POLICY = None
CORS_ALLOWED_ORIGINS = [
    "http://47.107.91.5:5173",  # 你的前端地址
    "http://localhost:5173",
]

# celery broker and result
# CELERY_BROKER_URL = os.environ.get("BROKER_URL", "redis://:sad*$ds@Asd9@redis:6379/0")
# CELERY_RESULT_BACKEND = os.environ.get("BROKER_URL", "redis://:sad*$ds@Asd9@redis:6379/0")
CELERY_IGNORE_RESULT = False # this is less important
CELERY_TASK_TRACK_STARTED = True