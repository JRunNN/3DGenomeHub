# Generated by Django 4.1 on 2024-12-16 11:27

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Enhancer',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('chrom', models.CharField(blank=True, max_length=10, null=True)),
                ('start', models.BigIntegerField(blank=True, null=True)),
                ('end', models.BigIntegerField(blank=True, null=True)),
                ('log_pvalue', models.FloatField(blank=True, db_column='-logPvalue', null=True)),
                ('file_id', models.CharField(blank=True, max_length=100, null=True)),
                ('experiment', models.CharField(blank=True, max_length=100, null=True)),
                ('subtissue', models.CharField(blank=True, max_length=200, null=True)),
                ('tissue', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'enhancer',
            },
        ),
        migrations.CreateModel(
            name='Samples',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('sample', models.CharField(max_length=100, unique=True)),
                ('data_source', models.CharField(blank=True, max_length=100, null=True)),
                ('data_type', models.CharField(blank=True, max_length=200, null=True)),
                ('enzyme_linker', models.CharField(blank=True, max_length=100, null=True)),
                ('factor', models.CharField(blank=True, max_length=100, null=True)),
                ('tissue', models.CharField(blank=True, max_length=200, null=True)),
                ('health_status', models.CharField(blank=True, max_length=200, null=True)),
                ('biomaterial_type', models.CharField(blank=True, max_length=200, null=True)),
                ('cell_line_name', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'samples',
            },
        ),
        migrations.CreateModel(
            name='Stripe',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('chrom1', models.CharField(blank=True, max_length=10, null=True)),
                ('pos1', models.BigIntegerField(blank=True, null=True)),
                ('pos2', models.BigIntegerField(blank=True, null=True)),
                ('chrom2', models.CharField(blank=True, max_length=10, null=True)),
                ('pos3', models.BigIntegerField(blank=True, null=True)),
                ('pos4', models.BigIntegerField(blank=True, null=True)),
                ('pvalue', models.FloatField(blank=True, null=True)),
                ('gene_anno_1', models.CharField(blank=True, max_length=500, null=True)),
                ('gene_anno_2', models.CharField(blank=True, max_length=500, null=True)),
                ('chipseq_anno_1', models.CharField(blank=True, max_length=500, null=True)),
                ('chipseq_anno_2', models.CharField(blank=True, max_length=500, null=True)),
                ('stripe_type', models.CharField(blank=True, max_length=500, null=True)),
                ('sample_name', models.ForeignKey(db_column='sample_name', on_delete=django.db.models.deletion.CASCADE, to='results.samples', to_field='sample')),
            ],
            options={
                'db_table': 'stripe',
            },
        ),
        migrations.CreateModel(
            name='Loop',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('chrom1', models.CharField(blank=True, max_length=10, null=True)),
                ('start1', models.BigIntegerField(blank=True, null=True)),
                ('end1', models.BigIntegerField(blank=True, null=True)),
                ('chrom2', models.CharField(blank=True, max_length=10, null=True)),
                ('start2', models.BigIntegerField(blank=True, null=True)),
                ('end2', models.BigIntegerField(blank=True, null=True)),
                ('counts', models.IntegerField(blank=True, null=True)),
                ('gene_anno_1', models.CharField(blank=True, max_length=500, null=True)),
                ('gene_anno_2', models.CharField(blank=True, max_length=500, null=True)),
                ('sample_name', models.ForeignKey(db_column='sample_name', on_delete=django.db.models.deletion.CASCADE, to='results.samples', to_field='sample')),
            ],
            options={
                'db_table': 'loop',
            },
        ),
        migrations.CreateModel(
            name='DomainBound',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('chrom', models.CharField(blank=True, max_length=10, null=True)),
                ('start', models.BigIntegerField(blank=True, null=True)),
                ('end', models.BigIntegerField(blank=True, null=True)),
                ('sample_name', models.ForeignKey(db_column='sample_name', on_delete=django.db.models.deletion.CASCADE, to='results.samples', to_field='sample')),
            ],
            options={
                'db_table': 'domain_bound_samples',
            },
        ),
        migrations.CreateModel(
            name='Compartment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('chrom', models.CharField(blank=True, max_length=10, null=True)),
                ('start', models.BigIntegerField(blank=True, null=True)),
                ('end', models.BigIntegerField(blank=True, null=True)),
                ('value', models.FloatField()),
                ('sample_name', models.ForeignKey(db_column='sample_name', on_delete=django.db.models.deletion.CASCADE, to='results.samples', to_field='sample')),
            ],
            options={
                'db_table': 'compartment',
            },
        ),
    ]
